name: Deploy with OAuth

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to deploy'
        required: true

env:
  REGISTRY: cr.yandex
  REPO: ${{ secrets.YC_REGISTRY_ID }}/app

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Install YC CLI
        run: |
          curl -sSL https://storage.yandexcloud.net/yandexcloud-yc/install.sh | bash
          echo "$HOME/yandex-cloud/bin" >> $GITHUB_PATH

      - name: Get OAuth Token
        id: get-token
        run: |
          echo "${{ secrets.YC_OAUTH_TOKEN }}" > oauth.txt
          YC_TOKEN=$(yc iam create-token --oauth-token $(cat oauth.txt))
          echo "::add-mask::$YC_TOKEN"
          echo "YC_TOKEN=$YC_TOKEN" >> $GITHUB_ENV
          rm oauth.txt

      - name: Login to Container Registry
        run: |
          echo "${{ env.YC_TOKEN }}" | docker login \
            --username iam \
            --password-stdin \
            ${{ env.REGISTRY }}

      - name: Verify image exists
        run: |
          docker pull ${{ env.REGISTRY }}/${{ env.REPO }}:${{ github.event.inputs.version }}
.
      - name: Deploy to VM
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.VM_IP }}
          username: ${{ secrets.VM_SSH_USER }}
          key: ${{ secrets.VM_SSH_KEY }}
          script: |
            set -ex
            echo "${{ secrets.YC_OAUTH_TOKEN }}" > oauth.txt
            YC_TOKEN=$(yc iam create-token --oauth-token $(cat oauth.txt))
            echo "$YC_TOKEN" | docker login --username iam --password-stdin ${{ env.REGISTRY }}
            
            docker pull ${{ env.REGISTRY }}/${{ env.REPO }}:${{ github.event.inputs.version }}
            docker stop app || true
            docker rm app || true
            docker run -d \
              --name app \
              --restart always \
              -p 80:3000 \
              -e NODE_ENV=production \
              ${{ env.REGISTRY }}/${{ env.REPO }}:${{ github.event.inputs.version }}
            
            rm oauth.txt
            docker system prune -f