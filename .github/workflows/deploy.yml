name: Deploy to Production VM

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Docker image version to deploy (e.g. 123 or 123_fix456)"
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Verify Docker image exists
        run: |
          echo '${{ secrets.YC_KEY_JSON }}' > key.json
          cat key.json | docker login \
            --username json_key \
            --password-stdin \
            cr.yandex

          if ! docker pull cr.yandex/${{ secrets.YC_REGISTRY_ID }}/app:${{ github.event.inputs.version }}; then
            echo "::error::Image cr.yandex/${{ secrets.YC_REGISTRY_ID }}/app:${{ github.event.inputs.version }} not found!"
            exit 1
          fi
          rm -f key.json

      - name: Deploy to VM
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.VM_IP }}
          username: ${{ secrets.VM_SSH_USER }}
          key: ${{ secrets.VM_SSH_KEY }}
          script: |
            set -e
            echo '${{ secrets.YC_KEY_JSON }}' > key.json
            cat key.json | docker login \
              --username json_key \
              --password-stdin \
              cr.yandex

            echo "Stopping existing container..."
            docker stop app || true
            docker rm app || true

            echo "Pulling new image..."
            docker pull cr.yandex/${{ secrets.YC_REGISTRY_ID }}/app:${{ github.event.inputs.version }}

            echo "Starting new container..."
            docker run -d \
              --name app \
              --restart always \
              -p 80:3000 \
              -e NODE_ENV=production \
              cr.yandex/${{ secrets.YC_REGISTRY_ID }}/app:${{ github.event.inputs.version }}

            echo "Cleaning up..."
            rm -f key.json
            docker system prune -f

            echo "Deployment completed successfully!"
